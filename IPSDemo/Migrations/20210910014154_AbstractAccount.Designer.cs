// <auto-generated />
using System;
using IPSDemo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IPSDemo.Migrations
{
    [DbContext(typeof(IPSDemoModel))]
    [Migration("20210910014154_AbstractAccount")]
    partial class AbstractAccount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("IPSDemo.IPSDemoModel+CorporateAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ABN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAccountBSB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAccountNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NoOfCompanyOfficers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CorporateAccounts");
                });

            modelBuilder.Entity("IPSDemo.IPSDemoModel+Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CorporateAccountId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PersonalAccountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CorporateAccountId");

                    b.HasIndex("PersonalAccountId");

                    b.ToTable("Person");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("IPSDemo.IPSDemoModel+PersonalAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAccountBSB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAccountNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TFN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PersonalAccounts");
                });

            modelBuilder.Entity("IPSDemo.IPSDemoModel+CorporateAccount+CompanyOfficer", b =>
                {
                    b.HasBaseType("IPSDemo.IPSDemoModel+Person");

                    b.Property<Guid?>("CorporateAccountId1")
                        .HasColumnType("TEXT");

                    b.HasIndex("CorporateAccountId1");

                    b.HasDiscriminator().HasValue("CompanyOfficer");
                });

            modelBuilder.Entity("IPSDemo.IPSDemoModel+Person", b =>
                {
                    b.HasOne("IPSDemo.IPSDemoModel+CorporateAccount", null)
                        .WithMany("Personell")
                        .HasForeignKey("CorporateAccountId");

                    b.HasOne("IPSDemo.IPSDemoModel+PersonalAccount", null)
                        .WithMany("Personell")
                        .HasForeignKey("PersonalAccountId");
                });

            modelBuilder.Entity("IPSDemo.IPSDemoModel+CorporateAccount+CompanyOfficer", b =>
                {
                    b.HasOne("IPSDemo.IPSDemoModel+CorporateAccount", null)
                        .WithMany("CompanyOfficers")
                        .HasForeignKey("CorporateAccountId1");
                });

            modelBuilder.Entity("IPSDemo.IPSDemoModel+CorporateAccount", b =>
                {
                    b.Navigation("CompanyOfficers");

                    b.Navigation("Personell");
                });

            modelBuilder.Entity("IPSDemo.IPSDemoModel+PersonalAccount", b =>
                {
                    b.Navigation("Personell");
                });
#pragma warning restore 612, 618
        }
    }
}
